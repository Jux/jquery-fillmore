h1. jQuery Fillmore

Fillmore is a jQuery plugin that allows you to add a dynamically-resized background image to any page, or any given element.
The image will stretch to fit the page / element, and will automatically resize as the window size changes.

This was originally a fork of the jquery Backstretch plugin, which only allowed for stretching an image as the background 
of the page body, but then was rewritten to allow stretching a background image over any desired element as well. Hence the name,
"Fillmore"; it fills more elements :)  

The method parameters are different from backstretch however, taking a single 'settings' object (hash) as the first parameter for 
specifying everything, instead of the 3 parameter method signature that backstretch uses. This was done so that method calls could be made
on the underlying Fillmore object by providing the first parameter as a string instead of an object, with arguments appended (much
like how jQuery UI does it). 

The original jquery Backstretch plugin is here btw: https://github.com/srobbin/jquery-backstretch.  Thanks, Scott Robbin.


h2. Demo

There are a couple of examples included with this package, or feel free to check it out live "on the project page itself.":http://srobbin.com/jquery-plugins/jquery-fillmore/


h2. Setup

Include the jQuery library and Fillmore plugin files in your webpage (preferably at the bottom of the page, before the closing BODY tag):

<pre><code><script type="text/javascript" src="http://ajax.googleapis.com/ajax/libs/jquery/1.7.1/jquery.min.js"></script>
<script type="text/javascript" src="jquery.fillmore.min.js"></script>
</code></pre>

Note: The example above uses the Google hosted version of jQuery; there is also a jQuery source file included with this distribution, if you would like to host it yourself.


h2. Usage

General usage of adding an image:

<pre><code><script type="text/javascript">
  // To stretch an image over the document body
  $.fillmore( Object options );

  // The above is equivalent to:
  $('body').fillmore( Object options );


  // To stretch an image over any element(s) (jQuery wrapped set)
  $('div.myEls').fillmore( Object options );
</script>
</code></pre>

Calling methods on the underlying Fillmore object:

<pre><code><script type="text/javascript">
  $.fillmore( String methodName, [ Mixed methodArgs... ] );

  // The above is equivalent to:
  $('body').fillmore( String methodName, [ Mixed methodArgs... ] );


  // And on any jQuery wrapped set
  $('div.myEls').fillmore( String methodName, [ Mixed methodArgs... ] );
</script>
</code></pre>
The only method of interest at this time however, is the "destroy" method, which removes the Fillmore'd image. See the examples.


h2. Settings

h3. src

Required. The src of the image to load. (type=String)

h3. focusX

The percentage from the left edge of the photo to keep fixed within the element, relative to its position in the original photo.  Uses (or mimics) the CSS background-position percentage values - see "the spec":http://www.w3.org/TR/css3-background/#background-position for more info. (type=Number, default=50)

h3. focusY

Focus percentage from top - see focusX for more info. (type=Number, default=50)

h3. speed

This is the speed at which the image will fade in, after downloading is complete. Integers are accepted, as well as standard jQuery speed strings (slow, normal, fast). (type=Integer, default=0)

h3. onImageLoad

A function to run when the new image has been loaded (but not yet faded in). (type=Function, default=undefined)

h3. onImageVisible / callback

A function to run when the new image has been loaded and faded in. Either option name can be used (onImageVisible or callback). (type=Function, default=undefined)

h3. noCss3

Set to true to make the plugin *not* use CSS3 background-size:cover, if available. This can be used if you find a situation where the background-size:cover is not working correctly, and you need to fall back to the regular image stretching implementation. (If you find one of these situations though, let me know by creating a github issue!) (type=Boolean, default=false)



h2. Examples

<pre><code><script type="text/javascript">
  // Add a stretched background image to the page (body)
  $.fillmore( { src: "/path/to/image.jpg", speed: 150 } );
</script>
</code></pre>

Want to change the background image after Fillmore has been loaded? No problem, just call it again!

<pre><code><script type="text/javascript">
  $.fillmore( { src: "/path/to/image.jpg", speed: 150 } );
  
  // Perhaps you'd like to change the image on a button click
  $(".button").click(function() {
    $.fillmore( { src: "/path/to/next_image.jpg" } );
  });
</script>
</code></pre>


You may also stretch a background image over any element(s) as well.

<pre><code><script type="text/javascript">
  $('div').fillmore( { src: "/path/to/image.jpg", speed: 150 } );
  
  // And then changing them at a later time...
  $(".button").click(function() {
    $('div').fillmore( { src: "/path/to/next_image.jpg" } );
  });
</script>
</code></pre>


Removing the image at a later time:

<pre><code><script type="text/javascript">
  $('div').fillmore( { src: "/path/to/image.jpg", speed: 150 } );
  
  // Removing the Fillmore'd image
  $(".button").click(function() {
    $('div').fillmore( "destroy" );
  });
</script>
</code></pre>


h2. Changelog

h3. Version 1.0

* Rewrote original jquery Backstretch plugin (https://github.com/srobbin/jquery-backstretch) to be able to stretch a background image over any element; not just the page body.
* Changed method signature from 3 param backstretch signature to 1 param 'settings' signature.
* Added a 'destroy' method to remove the Fillmore instance, and reset the container element back to its original state. 


h2. Support

Please file a ticket on our Github issue tracker.